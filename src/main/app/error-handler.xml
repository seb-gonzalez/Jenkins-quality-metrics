<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
	<http:request-config name="HTTP_Request_Configuration" host="0.0.0.0" port="${http.port}" doc:name="HTTP Request Configuration" />

	<choice-exception-strategy name="Global_Exception_Strategy">
		<catch-exception-strategy when="#[exception.causedBy(org.mule.module.apikit.exception.NotFoundException)]" doc:name="404">
			<message-properties-transformer overwrite="true" doc:name="Message Properties">
				<add-message-property key="Content-Type" value="application/json" />
				<add-message-property key="http.status" value="404" />
			</message-properties-transformer>
			<logger message="[#[message.id]] [#[flow.name]] [400] [#[exception.detailedMessage]] [#[payload]]" level="ERROR" category="com.addisonlee.Logger"
				doc:name="Logger" />
			<set-payload
				value="{&quot;status&quot;:404,&quot;code&quot;:&quot;USR&quot;,&quot;message&quot;:&quot;Invalid or unknown endpoint URI&quot;,&quot;reference_id&quot;:&quot;#[message.id]&quot;}"
				doc:name="Set Payload" />
		</catch-exception-strategy>
		<catch-exception-strategy when="#[exception.causedBy(org.mule.module.apikit.exception.MethodNotAllowedException)]"
			doc:name="405">
			<message-properties-transformer overwrite="true" doc:name="Message Properties">
				<add-message-property key="Content-Type" value="application/json" />
				<add-message-property key="http.status" value="405" />
			</message-properties-transformer>
			<logger message="[#[message.id]] [#[flow.name]] [405] [#[exception.detailedMessage]] [#[payload]]" level="ERROR" category="com.addisonlee.Logger"
				doc:name="Logger" />
			<set-payload
				value="{&quot;status&quot;:405,&quot;code&quot;:&quot;USR&quot;,&quot;message&quot;:&quot;Invalid HTTP Method&quot;,&quot;reference_id&quot;:&quot;#[message.id]&quot;}"
				doc:name="Set Payload" />
		</catch-exception-strategy>
		<catch-exception-strategy when="#[exception.causedBy(org.mule.module.apikit.exception.UnsupportedMediaTypeException)]"
			doc:name="415">
			<message-properties-transformer overwrite="true" doc:name="Message Properties">
				<add-message-property key="Content-Type" value="application/json" />
				<add-message-property key="http.status" value="415" />
			</message-properties-transformer>
			<logger message="[#[message.id]] [#[flow.name]] [415] [#[exception.detailedMessage]] [#[payload]]" level="ERROR" category="com.addisonlee.Logger"
				doc:name="Logger" />
			<set-payload
				value="{&quot;status&quot;:415,&quot;code&quot;:&quot;USR&quot;,&quot;message&quot;:&quot;Unsupported media type&quot;,&quot;reference_id&quot;:&quot;#[message.id]&quot;}"
				doc:name="Set Payload" />
		</catch-exception-strategy>
		<catch-exception-strategy when="#[exception.causedBy(org.mule.module.apikit.exception.NotAcceptableException)]" doc:name="406">
			<message-properties-transformer overwrite="true" doc:name="Message Properties">
				<add-message-property key="Content-Type" value="application/json" />
				<add-message-property key="http.status" value="406" />
			</message-properties-transformer>
			<logger message="[#[message.id]] [#[flow.name]] [406] [#[exception.detailedMessage]] [#[payload]]" level="ERROR" category="com.addisonlee.Logger"
				doc:name="Logger" />
			<set-payload
				value="{&quot;status&quot;:406,&quot;code&quot;:&quot;USR&quot;,&quot;message&quot;:&quot;Not acceptable&quot;,&quot;reference_id&quot;:&quot;#[message.id]&quot;}"
				doc:name="Set Payload" />
		</catch-exception-strategy>
		<catch-exception-strategy
			when="#[ exception.causedBy(org.mule.module.apikit.exception.InvalidHeaderException) || (exception.cause != empty &amp;&amp;exception.cause.toString().contains(&quot;'authorization'&quot;)) || exception.causedBy(org.mule.module.http.internal.request.ResponseValidatorException)]"
			doc:name="401">
			<byte-array-to-object-transformer doc:name="Byte Array to Object" />
			<choice doc:name="Choice">
				<when
					expression="#[message.payload.contains('Your user credentials are invalid. Please contact your D&amp;B Representative or your local Customer Service Center')]">
					<ee:invalidate-cache cachingStrategy-ref="Caching_Strategy" />
					<http:request config-ref="HTTP_Request_Configuration" path="/api/${api.dnblookup.version}/dnb/search" method="GET"
						doc:name="Request_Dnb_API_Reconnection_HTTP">
						<http:request-builder>
                            <http:query-param paramName="company" value="#[flowVars.searchTerm]"/>
                            <http:header headerName="http.status" value="200"/>
						</http:request-builder>
					</http:request>
				</when>
				<otherwise>
					<message-properties-transformer overwrite="true" doc:name="Message      Properties">
						<add-message-property key="Content-Type" value="application/json" />
						<add-message-property key="http.status" value="401" />
					</message-properties-transformer>
					<logger message="[#[message.id]] [#[flow.name]] [401] [#[exception.detailedMessage]]  --- ####401ERROR      [#[payload]]" level="ERROR"
						category="com.addisonlee.Logger" doc:name="Logger" />
					<set-payload
						value="{&quot;status&quot;:401,&quot;code&quot;:&quot;USR&quot;,&quot;message&quot;:&quot;Invalid Authorization header&quot;,&quot;reference_id&quot;:&quot;#[message.id]&quot;}"
						doc:name="Set Payload" />
				</otherwise>
			</choice>
		</catch-exception-strategy>
		<catch-exception-strategy
			when="#[exception.causedBy(org.mule.module.apikit.exception.InvalidFormParameterException) || exception.causedBy(org.mule.module.apikit.exception.InvalidQueryParameterException)]"
			doc:name="400">
			<message-properties-transformer overwrite="true" doc:name="Message Properties">
				<add-message-property key="Content-Type" value="application/json" />
				<add-message-property key="http.status" value="400" />
			</message-properties-transformer>
			<logger message="[#[message.id]] [#[flow.name]] [400] [#[exception.detailedMessage]] [#[payload]]" level="ERROR" category="com.addisonlee.Logger"
				doc:name="Logger" />
			<set-payload
				value="{&quot;status&quot;:400,&quot;code&quot;:&quot;USR&quot;,&quot;message&quot;:&quot;#[exception.cause.message]&quot;,&quot;reference_id&quot;:&quot;#[message.id]&quot;}"
				doc:name="Set Payload" />
		</catch-exception-strategy>
		<catch-exception-strategy
			when="#[exception.causedBy(org.codehaus.jackson.JsonParseException) || exception.causedBy(org.mule.api.expression.ExpressionRuntimeException)]"
			doc:name="400 JSON">
			<message-properties-transformer overwrite="true" doc:name="Message Properties">
				<add-message-property key="Content-Type" value="application/json" />
				<add-message-property key="http.status" value="400" />
			</message-properties-transformer>
			<logger message="[#[message.id]] [#[flow.name]] [400] [#[exception.detailedMessage]] [#[payload]]" level="ERROR" category="com.addisonlee.Logger"
				doc:name="Logger" />
			<set-payload
				value="{&quot;status&quot;:400,&quot;code&quot;:&quot;USR&quot;,&quot;message&quot;:&quot;Invalid data types in json request. &quot;,&quot;reference_id&quot;:&quot;#[message.id]&quot;}"
				doc:name="Set Payload" />
		</catch-exception-strategy>
		<catch-exception-strategy when="#[exception.causedBy(javax.script.ScriptException)]" doc:name="Custom 400">
			<message-properties-transformer overwrite="true" doc:name="Message Properties">
				<add-message-property key="Content-Type" value="application/json" />
				<add-message-property key="http.status" value="400" />
			</message-properties-transformer>
			<logger message="[#[message.id]] [#[flow.name]] [400] [#[exception.detailedMessage]] [#[payload]]" level="ERROR" category="com.addisonlee.Logger"
				doc:name="Logger" />
			<set-payload
				value="{&quot;status&quot;:400,&quot;code&quot;:&quot;USR&quot;,&quot;message&quot;:&quot;#[(org.mule.util.ExceptionUtils.getRootCauseMessage(exception)).substring(11)]&quot;,&quot;reference_id&quot;:&quot;#[message.id]&quot;}"
				doc:name="groovy exception" />
		</catch-exception-strategy>
		<catch-exception-strategy when="#[exception.causedBy(org.mule.module.http.internal.request.ResponseValidatorException)]"
			doc:name="Custom 400 - error returned by external API">
			<message-properties-transformer overwrite="true" doc:name="Message Properties">
				<add-message-property key="Content-Type" value="application/json" />
				<add-message-property key="http.status" value="400" />
			</message-properties-transformer>
			<logger message="[#[message.id]] [#[flow.name]] [400] [#[exception.detailedMessage]] [#[payload]]" level="ERROR" category="com.addisonlee.Logger"
				doc:name="Logger" />
			<object-to-string-transformer doc:name="Object to String" />
			<set-payload value="#[payload]" doc:name="Set Payload" />
		</catch-exception-strategy>
		<catch-exception-strategy doc:name="500">
			<message-properties-transformer overwrite="true" doc:name="Message Properties">
				<add-message-property key="Content-Type" value="application/json" />
				<add-message-property key="http.status" value="500" />
			</message-properties-transformer>
			<logger level="INFO" doc:name="Logger" />
			<logger message="[#[message.id]] [#[flow.name]] [500] [#[exception.detailedMessage]] [#[payload]]" level="INFO" category="com.addisonlee.Logger"
				doc:name="Logger" />
			<object-to-string-transformer doc:name="Object to String" />
			<set-payload
				value="{&quot;status&quot;:500,&quot;code&quot;:&quot;SYS&quot;,&quot;message&quot;:&quot;Internal Server Error: #[exception.cause.message]&quot;,&quot;reference_id&quot;:&quot;#[message.id]&quot;}"
				doc:name="Set Payload" />
		</catch-exception-strategy>
	</choice-exception-strategy>
</mule>
